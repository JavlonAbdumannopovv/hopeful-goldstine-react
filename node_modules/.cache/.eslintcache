[{"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/index.js":"1","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/App.js":"2","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Main/Main.js":"3","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Sidebar/Sidebar.js":"4","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Sidebar/SidebarElements.js":"5","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/data/data.js":"6","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Settings.js":"7","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Home.js":"8","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/HomeElements.js":"9","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Food/Food.js":"10","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Food/FoodElements.js":"11","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Orders/Orders.js":"12","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Button/Button.js":"13","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Orders/OrdersElements.js":"14","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Button/ButtonElements.js":"15","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Payment/Payment.js":"16","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Payment/PaymentElements.js":"17","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/Error/ErrorSection.js":"18","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Products/Products.js":"19","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/SettingsElements.js":"20","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Products/ProductsElements.js":"21","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/AppElements.js":"22","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/index.js":"23","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/reportWebVitals.js":"24","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/App.js":"25","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeHeader/EmployeeHeader.js":"26","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeForm/EmployeeForm.js":"27","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeList/EmployeeList.js":"28","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeEditForm/EmployeeEditForm.js":"29"},{"size":325,"mtime":1683898016785,"results":"30","hashOfConfig":"31"},{"size":491,"mtime":1684675567292,"results":"32","hashOfConfig":"31"},{"size":1078,"mtime":1684675566901,"results":"33","hashOfConfig":"31"},{"size":946,"mtime":1684142665731,"results":"34","hashOfConfig":"31"},{"size":1458,"mtime":1683917673903,"results":"35","hashOfConfig":"31"},{"size":11160,"mtime":1684674521426,"results":"36","hashOfConfig":"31"},{"size":2169,"mtime":1684675983851,"results":"37","hashOfConfig":"31"},{"size":4680,"mtime":1684675627367,"results":"38","hashOfConfig":"31"},{"size":2630,"mtime":1684620216423,"results":"39","hashOfConfig":"31"},{"size":587,"mtime":1684087932298,"results":"40","hashOfConfig":"31"},{"size":828,"mtime":1684125700907,"results":"41","hashOfConfig":"31"},{"size":4933,"mtime":1684675737068,"results":"42","hashOfConfig":"31"},{"size":725,"mtime":1684323609442,"results":"43","hashOfConfig":"31"},{"size":3850,"mtime":1684332319251,"results":"44","hashOfConfig":"31"},{"size":360,"mtime":1684323662060,"results":"45","hashOfConfig":"31"},{"size":4070,"mtime":1684482757140,"results":"46","hashOfConfig":"31"},{"size":4032,"mtime":1684675789797,"results":"47","hashOfConfig":"31"},{"size":244,"mtime":1684427485475,"results":"48","hashOfConfig":"31"},{"size":11111,"mtime":1684676221571,"results":"49","hashOfConfig":"31"},{"size":1542,"mtime":1684674850151,"results":"50","hashOfConfig":"31"},{"size":6246,"mtime":1684676268026,"results":"51","hashOfConfig":"31"},{"size":182,"mtime":1684482439952,"results":"52","hashOfConfig":"31"},{"size":513,"mtime":1679250995000,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1679250995000,"results":"55","hashOfConfig":"54"},{"size":3488,"mtime":1684680523506,"results":"56","hashOfConfig":"54"},{"size":630,"mtime":1684679631606,"results":"57","hashOfConfig":"54"},{"size":4152,"mtime":1679250995000,"results":"58","hashOfConfig":"54"},{"size":4046,"mtime":1684681207508,"results":"59","hashOfConfig":"54"},{"size":4451,"mtime":1679250995000,"results":"60","hashOfConfig":"54"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p1y0q5",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3mlnl7",{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/index.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/App.js",[],[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Main/Main.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Sidebar/Sidebar.js",["154"],[],"import React, { useState } from \"react\";\nimport { sidebarItems } from \"../../data/data\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../../assets/bx_bxs-store-alt.svg\";\nimport { Items, Item, Wrapper, Logo, Border, Border1 } from \"./SidebarElements\";\nconst Sidebar = () => {\n  const [data, setData] = useState(sidebarItems.data);\n\n  return (\n    <Items>\n      <Logo>\n        <img src={logo} alt=\"logo\" />\n      </Logo>\n      {data.map((item) => (\n        <NavLink to={item.link} key={item.id}>\n          <Item \n            className=\"Item\"\n            \n          >\n            <Wrapper  className=\"Wrapper\">\n              <i\n                className={item.icon + \" icon\"}\n                aria-hidden=\"true\"\n              ></i>\n              <Border  className=\"Item\"/>\n              <Border1  className=\"Item\"/>\n            </Wrapper>\n          </Item>\n        </NavLink>\n      ))}\n    </Items>\n  );\n};\n\nexport default Sidebar;\n","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Sidebar/SidebarElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/data/data.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Settings.js",["155"],[],"import React, { useState } from \"react\";\nimport ErrorSection from \"../../Error/ErrorSection\";\nimport Products from \"./Products/Products\";\nimport {\n  Container,\n  Title,\n  Wrapper,\n  Menu,\n  MenuList,\n  MenuItem,\n  MenuItem1,\n  ItemWrapper,\n  ItemTitle,\n  ItemTitle1,\n  ItemSubtitle,\n  Main,\n} from \"./SettingsElements\";\nimport { settingsMenu } from \"../../data/data\";\n\nconst Settings = ({ foodsData, setFoodsData, backStyle, setBackStyle }) => {\n  const iconStyle = {\n    fontSize: \"14px\",\n    color: \"#999\",\n    margin: \"1px 5px 0 0\",\n  };\n  const iconStyle1 = {\n    fontSize: \"14px\",\n    margin: \"1px 5px 0 0\",\n    color: \"#ea7c69\",\n  };\n  const [category, setCategory] = useState(\"products\");\n\n  return (\n    <Container>\n      <Title>Settings</Title>\n      <Wrapper>\n        <Menu>\n          <MenuList>\n            {settingsMenu.map((item) => {\n              if (item.title === \"Products Management\") {\n                return (\n                  <MenuItem1 key={item.id} style={item.style}>\n                    <i style={iconStyle1} className={item.icon}></i>\n                    <ItemWrapper>\n                      <ItemTitle1>{item.title}</ItemTitle1>\n                      <ItemSubtitle>{item.subtitle}</ItemSubtitle>\n                    </ItemWrapper>\n                  </MenuItem1>\n                );\n              } else if (item.title !== \"Products Management\") {\n                return (\n                  <MenuItem key={item.id} style={item.style}>\n                    <i style={iconStyle} className={item.icon}></i>\n                    <ItemWrapper>\n                      <ItemTitle>{item.title}</ItemTitle>\n                      <ItemSubtitle>{item.subtitle}</ItemSubtitle>\n                    </ItemWrapper>\n                  </MenuItem>\n                );\n              }\n              return null;\n            })}\n          </MenuList>\n        </Menu>\n        <Main>\n          {category === \"error\" ? (\n            <ErrorSection />\n          ) : (\n            <Products foodsData={foodsData} setFoodsData={setFoodsData}      setBackStyle={setBackStyle}/>\n          )}\n        </Main>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Settings;\n","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Home.js",["156"],[],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Primary,\n  Header,\n  User,\n  UserName,\n  UserDate,\n  Search,\n  Category,\n  Title,\n  Foods,\n  FoodsHeader,\n  FoodsTitle,\n  Sort,\n  FoodsMain,\n  None,\n} from \"./HomeElements\";\nimport Food from \"../Food/Food\";\nimport { titles } from \"../../data/data\";\nimport Orders from \"./Orders/Orders\";\nimport Payment from \"./Payment/Payment\";\nimport { backData } from \"../../data/data\";\n\nconst Home = ({ foodsData, setFoodsData, backStyle, setBackStyle }) => {\n  const inputStyle = {\n    border: \"none\",\n    outline: \"none\",\n    background: \"transparent\",\n    padding: \"10px\",\n    width: \"220px\",\n    height: \"40px\",\n    fontStyle: \"normal\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"140%\",\n  };\n\n  const [activeType, setActiveType] = useState(\"Hot Dishes\");\n  const [titlesData, setTitlesData] = useState(titles);\n  const [search, setSearch] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const clickTitleHandler = (name, key) => {\n    setSearch(\"\");\n    setTitlesData((prevItems) => {\n      const updatedItems = [...prevItems];\n      const changedItems = updatedItems.map((item) => {\n        if (item.name === name) {\n          return {\n            ...item,\n            active: true,\n          };\n        } else {\n          return {\n            ...item,\n            active: false,\n          };\n        }\n      });\n      return changedItems;\n    });\n    setActiveType(name);\n  };\n\n  const clickFoodHandler = (food) => {\n    setIndex((prev) => prev + 1);\n    setFoodsData((prev) => {\n      const updateData = prev.map((item) => {\n        if (item.id === food.id) {\n          return { ...item, count: item.count + 1, index: index };\n        } else {\n          return item;\n        }\n      });\n      return updateData;\n    });\n  };\n\n  const searchFoodHandler = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <Container>\n      <Primary>\n        <Header>\n          <User>\n            <UserName>Jaegar Resto</UserName>\n            <UserDate>Tuesday, 2Feb 2021</UserDate>\n          </User>\n          <Search>\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\n            <input\n              value={search}\n              onChange={searchFoodHandler}\n              style={inputStyle}\n              type=\"search\"\n              placeholder=\"Search for food, coffe, etc..\"\n            />\n          </Search>\n        </Header>\n        <Category>\n          {titlesData.map((title, ind) => {\n            return (\n              <Title\n                key={title.id}\n                onClick={() => clickTitleHandler(title.name, ind)}\n                style={title.style(title.active)}\n              >\n                {title.name}\n              </Title>\n            );\n          })}\n        </Category>\n        <Foods>\n          <FoodsHeader>\n            <FoodsTitle>Choose Dishes</FoodsTitle>\n            <Sort>\n              <i className=\"fa-sharp fa-solid fa-chevron-down\"></i> Dine in\n            </Sort>\n          </FoodsHeader>\n          <FoodsMain>\n            {search === \"\"\n              ? foodsData.map((food) => {\n                  if (food.type.includes(activeType)) {\n                    return (\n                      <div key={food.id} onClick={() => clickFoodHandler(food)}>\n                        <Food\n                          id={food.id}\n                          img={food.img}\n                          name={food.name}\n                          price={food.price}\n                          bowl={food.bowl}\n                        />\n                      </div>\n                    );\n                  }\n                  return null;\n                })\n              : foodsData.map((food) => {\n                  if (food.name.toLowerCase().includes(search)) {\n                    return (\n                      <div key={food.id} onClick={() => clickFoodHandler(food)}>\n                        <Food\n                          id={food.id}\n                          img={food.img}\n                          name={food.name}\n                          price={food.price}\n                          bowl={food.bowl}\n                        />\n                      </div>\n                    );\n                  }\n                  return null;\n                })}\n          </FoodsMain>\n          <None></None>\n        </Foods>\n      </Primary>\n      {backStyle.display === \"none\" ? (\n        <Orders\n          foodsData={foodsData}\n          setFoodsData={setFoodsData}\n          setBackStyle={setBackStyle}\n        />\n      ) : (\n        <Payment setFoodsData={setFoodsData} setBackStyle={setBackStyle} />\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/HomeElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Food/Food.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Food/FoodElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Orders/Orders.js",["157","158","159"],[],"import React, { useState } from \"react\";\nimport Button from \"../../Button/Button\";\nimport {\n  Container,\n  Header,\n  HeaderTitle,\n  SortWrapper,\n  Main,\n  MainHeader,\n  MainHeaderTitle,\n  OrderList,\n  Order,\n  OrderHeader,\n  OrderInfo,\n  OrderName,\n  OrderPrice,\n  OrderCount,\n  OrderTotalPrice,\n  OrderFooter,\n  Input,\n  Delete,\n  Footer,\n  DiscountWrapper,\n  DiscountTitle,\n  Discount,\n  SubtotalWrapper,\n  SubtotalTitle,\n  Subtotal,\n  ButtonWrapper,\n} from \"./OrdersElements\";\nimport { backData } from \"../../../data/data\";\n\nconst Orders = ({ foodsData, setFoodsData, setBackStyle }) => {\n  const ind = [];\n  const sortFoodsData = [];\n  foodsData.forEach((item) => {\n    if (item.count > 0) {\n      ind.push(item.index);\n      ind.sort();\n    }\n  });\n  ind.forEach((el) => {\n    foodsData.forEach((item) => {\n      if (item.count > 0 && el === item.index) {\n        sortFoodsData.unshift(item);\n      }\n    });\n  });\n\n  const inputStyle = {\n    width: \"100%\",\n    height: \"45px\",\n    border: \"none\",\n    outline: \"none\",\n    background: \"transparent\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"140%\",\n    color: \"#E0E6E9\",\n  };\n\n  const iconStyle = {\n    fontSize: \"20px\",\n    color: \"#EA7C69\",\n  };\n\n  const imgStyle = {\n    borderRadius: \"100%\",\n  };\n\n  const changeItemCount = (id) => {\n    setFoodsData((prev) => {\n      const updateData = prev.map((item) => {\n        if (item.id === id) {\n          return { ...item, count: item.count + 1 };\n        } else {\n          return item;\n        }\n      });\n      return updateData;\n    });\n  };\n\n  const deleteItemHandler = (id) => {\n    setFoodsData((prev) => {\n      const updateData = prev.map((item) => {\n        if (item.id === id) {\n          return { ...item, count: 0 };\n        } else {\n          return item;\n        }\n      });\n\n      return updateData;\n    });\n  };\n\n  const ordersListPrint = () => {\n    const ordersList1 = sortFoodsData.map((item) => {\n      if (item.count > 0) {\n        return (\n          <Order key={item.id}>\n            <OrderHeader>\n              <img\n                style={imgStyle}\n                width=\"40px\"\n                height=\"40px\"\n                src={item.img}\n                alt={item.name}\n              />\n              <OrderInfo>\n                <OrderName>{item.name}</OrderName>\n                <OrderPrice>${item.price}</OrderPrice>\n              </OrderInfo>\n              <OrderCount onClick={() => changeItemCount(item.id)}>\n                {item.count}\n              </OrderCount>\n              <OrderTotalPrice>\n                {item.getTotalPrice(item.count, item.price).toFixed(2)}\n              </OrderTotalPrice>\n            </OrderHeader>\n            <OrderFooter>\n              <Input>\n                <input\n                  type=\"text\"\n                  placeholder=\"Order Note...\"\n                  style={inputStyle}\n                />\n              </Input>\n              <Delete onClick={() => deleteItemHandler(item.id)}>\n                <i style={iconStyle} className=\"fa fa-trash\"></i>\n              </Delete>\n            </OrderFooter>\n          </Order>\n        );\n      } else {\n        return null;\n      }\n    });\n    return ordersList1;\n  };\n\n  const [subtotal, setSubtotal] = useState(0);\n\n  React.useEffect(() => {\n    setSubtotal((prev) => {\n      let subtotal = 0;\n      const updatedItem = sortFoodsData.map((item) => {\n        return (subtotal = subtotal + item.count * item.price);\n      });\n      return subtotal.toFixed(2);\n    });\n  }, [sortFoodsData]);\n\n  const clickButtonHandler = () => {\n    if (sortFoodsData.length > 0) {\n      console.log(sortFoodsData.length);\n      setBackStyle({ display: \"block\" });\n    }\n  };\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTitle>Orders</HeaderTitle>\n        <SortWrapper>\n          <Button name=\"Dine In\" width=\"66px\" height=\"34px\" active={true} />\n          <Button name=\"To Go\" width=\"58px\" height=\"34px\" active={false} />\n          <Button name=\"Delivery\" width=\"74px\" height=\"34px\" active={false} />\n        </SortWrapper>\n      </Header>\n      <Main>\n        <MainHeader>\n          <MainHeaderTitle>Item</MainHeaderTitle>\n          <MainHeaderTitle>Qty</MainHeaderTitle>\n          <MainHeaderTitle>Price</MainHeaderTitle>\n        </MainHeader>\n        <OrderList>{ordersListPrint()}</OrderList>\n      </Main>\n      <Footer>\n        <DiscountWrapper>\n          <DiscountTitle>Discount</DiscountTitle>\n          <Discount>$0</Discount>\n        </DiscountWrapper>\n        <SubtotalWrapper>\n          <SubtotalTitle>Sub total</SubtotalTitle>\n          <Subtotal>${subtotal}</Subtotal>\n        </SubtotalWrapper>\n        <ButtonWrapper onClick={clickButtonHandler}>\n          <Button\n            name=\"Continue to Payment\"\n            width=\"361px\"\n            height=\"48px\"\n            active={false}\n          />\n        </ButtonWrapper>\n      </Footer>\n    </Container>\n  );\n};\n\nexport default Orders;\n","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Button/Button.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Orders/OrdersElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Button/ButtonElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Payment/Payment.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Home/Payment/PaymentElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/Error/ErrorSection.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Products/Products.js",["160","161","162"],[],"import React, { useState } from \"react\";\nimport {\n  titles,\n  foodMenu,\n  newFoods,\n  Food1,\n  newEditFoods,\n} from \"../../../data/data\";\nimport plus from \"../../../assets/Plus.svg\";\nimport {\n  Container,\n  Category,\n  Title,\n  Foods,\n  FoodsHeader,\n  FoodsTitle,\n  Sort,\n  FoodsMain,\n  NewDish,\n  NewDishIcon,\n  NewDishTitle,\n  Food,\n  FoodName,\n  FoodPrice,\n  FoodBowl,\n  Wrapper,\n  Edit,\n  EditIcon,\n  EditTitle,\n  ButtonWrapper,\n  Button,\n  FoodMenu,\n  MenuWrapper,\n  MenuNameTitle,\n  MenuNameInput,\n  TypeWrapper,\n  State,\n  Type,\n  MenuItem,\n  MenuButtons,\n  MenuButton,\n  Completed,\n} from \"./ProductsElements.js\";\n\nconst Products = ({ foodsData, setFoodsData, setBackStyle }) => {\n  const iconStyle = {\n    width: \"20px\",\n    height: \"20px\",\n    margin: \"0 7px 0\",\n    textDecoration: \"none !important\",\n  };\n  const imgStyle = {\n    borderRadius: \"50%\",\n    margin: \"0 0 16px\",\n  };\n  const inputStyle = {\n    border: \"none\",\n    outline: \"none\",\n    background: \"transparent\",\n    padding: \"10px\",\n    width: \"100%\",\n    height: \"40px\",\n    fontStyle: \"normal\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"140%\",\n  };\n  const smallStyle = {\n    display: \"none\",\n  };\n  const menuStyle = {\n    display: \"none\",\n  };\n\n  const [newFoodss, setNewFoods] = useState(newFoods);\n  const [newEditFoodss, setNewEditFoods] = useState(newEditFoods);\n  const [activeType, setActiveType] = useState(\"Hot Dishes\");\n  const [titlesData, setTitlesData] = useState(titles);\n  const [imgInput, setImgInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [foodState, setFoodState] = useState(foodMenu.foodState);\n  const [foodType, setFoodType] = useState(foodMenu.foodType);\n  const [addShow, setAddShow] = useState(true);\n  const [menuActive, setMenuActive] = useState(menuStyle);\n  const [completed, setCompleted] = useState(smallStyle);\n  const [clickedId, setClickedId] = useState(\"\");\n  const [buttonActive, setButtonActive] = useState(false);\n  const [cloneActive, setCloneActive] = useState(0);\n  const clickTitleHandler = (name, key) => {\n    setTitlesData((prevItems) => {\n      const updatedItems = [...prevItems];\n      const changedItems = updatedItems.map((item) => {\n        if (item.name === name) {\n          return {\n            ...item,\n            active: true,\n          };\n        } else {\n          return {\n            ...item,\n            active: false,\n          };\n        }\n      });\n      return changedItems;\n    });\n    setActiveType(name);\n  };\n\n  const imgInputChanged = (e) => {\n    setCompleted({ display: \"none\" });\n    setImgInput(e.target.value);\n  };\n\n  const nameInputChanged = (e) => {\n    setCompleted({ display: \"none\" });\n    setNameInput(e.target.value);\n  };\n\n  const foodStateItemClick = (id) => {\n    setFoodState((prev) => {\n      const data = prev.map((item) => {\n        return { ...item, active: false };\n      });\n      const updatedData = data.map((item) => {\n        if (item.id === id) {\n          return { ...item, active: true };\n        } else {\n          return item;\n        }\n      });\n      return updatedData;\n    });\n  };\n\n  const foodTypeItemClick = (id) => {\n    setFoodType((prev) => {\n      const data = prev.map((item) => {\n        return { ...item, active: false };\n      });\n      const updatedData = data.map((item) => {\n        if (item.id === id) {\n          return { ...item, active: true };\n        } else {\n          return item;\n        }\n      });\n      return updatedData;\n    });\n  };\n\n  const clickNewDish = () => {\n    setCloneActive((prev) => prev + 1);\n    setAddShow(true);\n    setMenuActive({ display: \"block\" });\n    setBackStyle({ display: \"block\" });\n  };\n\n  const addNewFood = () => {\n    if (imgInput !== \"\" && nameInput !== \"\") {\n      setCompleted({ display: \"none\" });\n      setNewFoods((prev) => {\n        const stateActive = foodState.filter((item) => item.active === true);\n        const typeActive = foodType.filter((item) => item.active === true);\n        const uploadedData = [\n          ...prev,\n          new Food1(\n            imgInput,\n            nameInput,\n            `${stateActive[0].type} ${typeActive[0].type}`\n          ),\n        ];\n        return uploadedData;\n      });\n      setFoodsData((prev) => {\n        const stateActive = foodState.filter((item) => item.active === true);\n        const typeActive = foodType.filter((item) => item.active === true);\n        const uploadedData = [\n          new Food1(\n            imgInput,\n            nameInput,\n            `${stateActive[0].type} ${typeActive[0].type}`\n          ),\n          ...prev,\n        ];\n        return uploadedData;\n      });\n      cancelNewFood();\n      setButtonActive(true);\n    } else if (imgInput === \"\" || nameInput === \"\") {\n      setCompleted({ display: \"block\" });\n    }\n  };\n\n  const cancelNewFood = () => {\n    setMenuActive({ display: \"none\" });\n    setCompleted({ display: \"none\" });\n    setNameInput(\"\");\n    setImgInput(\"\");\n    setBackStyle({ display: \"none\" });\n  };\n\n  const editDishHandler = (id) => {\n    setCloneActive((prev) => prev + 1);\n    foodsData.forEach((food) => {\n      if (food.id === id) {\n        setNameInput(food.name);\n        setImgInput(food.img);\n      }\n    });\n    setAddShow(false);\n    setMenuActive({ display: \"block\" });\n    setClickedId(id);\n    setBackStyle({ display: \"block\" });\n  };\n\n  const editClickedDish = (id) => {\n    if (imgInput !== \"\" && nameInput !== \"\") {\n      setCompleted({ display: \"none\" });\n      const stateActive = foodState.filter((item) => item.active === true);\n      const typeActive = foodType.filter((item) => item.active === true);\n      const data = foodsData.map((food) => {\n        if (food.id === id) {\n          return { ...food };\n        } else {\n          return null;\n        }\n      });\n\n      setFoodsData((prev) => {\n        const updatedData = prev.map((food) => {\n          if (food.id === id) {\n            const newObj = new Food1(\n              imgInput,\n              nameInput,\n              `${stateActive[0].type} ${typeActive[0].type}`\n            );\n            return { ...newObj, id: id };\n          } else {\n            return food;\n          }\n        });\n        return [...updatedData];\n      });\n\n      setButtonActive(true);\n      cancelNewFood();\n    } else if (imgInput === \"\" || nameInput === \"\") {\n      setCompleted({ display: \"block\" });\n    }\n  };\n  React.useEffect(() => {\n    console.log(cloneActive);\n    if (cloneActive === 0) {\n      setNewEditFoods((prev) => {\n        const data1 = [];\n        foodsData.forEach((food, i) => {\n          data1.push(food);\n        });\n        return [...prev, ...data1];\n      });\n    }\n    setCloneActive((prev) => prev + 1);\n  }, [foodsData]);\n\n  const discardChanges = () => {\n    setFoodsData((prev) => {\n      const a = [];\n      newEditFoodss.forEach((item, i) => {\n        if (i < newEditFoodss.length / 2) {\n          a.push(item);\n        }\n      });\n      return a;\n    });\n    saveChanges();\n  };\n  const saveChanges = () => {\n    setButtonActive(false);\n    setNewFoods([]);\n    setNewEditFoods([]);\n    setCloneActive(0);\n  };\n\n  return (\n    <Container>\n      <FoodsHeader>\n        <FoodsTitle>Products Management</FoodsTitle>\n        <Sort>\n          <i style={iconStyle} className=\"fa fa-sliders\"></i> Manage Categories\n        </Sort>\n      </FoodsHeader>\n      <Category>\n        {titlesData.map((title, ind) => {\n          return (\n            <Title\n              key={title.id}\n              onClick={() => clickTitleHandler(title.name, ind)}\n              style={title.style(title.active)}\n            >\n              {title.name}\n            </Title>\n          );\n        })}\n      </Category>\n      <Foods>\n        <FoodsMain>\n          <NewDish onClick={clickNewDish}>\n            <NewDishIcon>\n              <img src={plus} alt=\"plus\" />\n            </NewDishIcon>\n            <NewDishTitle>Add new dish</NewDishTitle>\n          </NewDish>\n          {foodsData.map((food) => {\n            if (food.type.includes(activeType)) {\n              return (\n                <Food key={food.id}>\n                  <img\n                    src={food.img}\n                    alt={food.name}\n                    width=\"132px\"\n                    height=\"132px\"\n                    style={imgStyle}\n                  />\n                  <FoodName>{food.name}</FoodName>\n                  <Wrapper>\n                    <FoodPrice>${food.price}</FoodPrice> -\n                    <FoodBowl>{food.bowl} Bowls</FoodBowl>\n                  </Wrapper>\n                  <Edit onClick={() => editDishHandler(food.id)}>\n                    <EditIcon></EditIcon>\n                    <EditTitle>Edit dish</EditTitle>\n                  </Edit>\n                </Food>\n              );\n            }\n            return null;\n          })}\n        </FoodsMain>\n      </Foods>\n      {buttonActive ? (\n        <ButtonWrapper>\n          <Button onClick={discardChanges}>Discard Changes</Button>\n          <Button onClick={saveChanges}>Save Changes</Button>\n        </ButtonWrapper>\n      ) : null}\n      <FoodMenu style={menuActive}>\n        <Completed style={completed}>Please, Full completed!</Completed>\n        <MenuWrapper>\n          <MenuNameTitle>Img Url</MenuNameTitle>\n          <MenuNameInput>\n            <input\n              value={imgInput}\n              style={inputStyle}\n              type=\"text\"\n              placeholder=\"Food img url enter ...\"\n              onChange={imgInputChanged}\n            />\n          </MenuNameInput>\n        </MenuWrapper>\n        <MenuWrapper>\n          <MenuNameTitle>Name</MenuNameTitle>\n          <MenuNameInput>\n            <input\n              value={nameInput}\n              style={inputStyle}\n              type=\"text\"\n              placeholder=\"Food name enter ...\"\n              onChange={nameInputChanged}\n            />\n          </MenuNameInput>\n        </MenuWrapper>\n        <TypeWrapper>\n          <State>\n            <MenuNameTitle>Food State</MenuNameTitle>\n            {foodState.map((item) => (\n              <MenuItem\n                onClick={() => foodStateItemClick(item.id)}\n                key={item.id}\n                style={item.style(item.active)}\n              >\n                {item.type}\n              </MenuItem>\n            ))}\n          </State>\n          <Type>\n            <MenuNameTitle>Food Type</MenuNameTitle>\n            {foodType.map((item) => (\n              <MenuItem\n                onClick={() => foodTypeItemClick(item.id)}\n                key={item.id}\n                style={item.style(item.active)}\n              >\n                {item.type}\n              </MenuItem>\n            ))}\n          </Type>\n        </TypeWrapper>\n        <MenuButtons>\n          <MenuButton onClick={cancelNewFood}>Cancel</MenuButton>\n          {addShow ? (\n            <MenuButton onClick={() => addNewFood()}>Add</MenuButton>\n          ) : (\n            <MenuButton onClick={() => editClickedDish(clickedId)}>\n              Edit\n            </MenuButton>\n          )}\n        </MenuButtons>\n      </FoodMenu>\n    </Container>\n  );\n};\n\nexport default Products;\n","/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/SettingsElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Products/ProductsElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/AppElements.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/index.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/reportWebVitals.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/App.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeHeader/EmployeeHeader.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeForm/EmployeeForm.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeList/EmployeeList.js",[],[],"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/hopeful-goldstine/src/Components/Employee/EmployeeEditForm/EmployeeEditForm.js",["163"],[],{"ruleId":"164","severity":1,"message":"165","line":7,"column":16,"nodeType":"166","messageId":"167","endLine":7,"endColumn":23},{"ruleId":"164","severity":1,"message":"168","line":31,"column":20,"nodeType":"166","messageId":"167","endLine":31,"endColumn":31},{"ruleId":"164","severity":1,"message":"169","line":23,"column":10,"nodeType":"166","messageId":"167","endLine":23,"endColumn":18},{"ruleId":"164","severity":1,"message":"169","line":31,"column":10,"nodeType":"166","messageId":"167","endLine":31,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":35,"column":9,"nodeType":"172","endLine":35,"endColumn":27},{"ruleId":"164","severity":1,"message":"173","line":148,"column":13,"nodeType":"166","messageId":"167","endLine":148,"endColumn":24},{"ruleId":"164","severity":1,"message":"174","line":75,"column":10,"nodeType":"166","messageId":"167","endLine":75,"endColumn":19},{"ruleId":"164","severity":1,"message":"175","line":222,"column":13,"nodeType":"166","messageId":"167","endLine":222,"endColumn":17},{"ruleId":"170","severity":1,"message":"176","line":264,"column":6,"nodeType":"177","endLine":264,"endColumn":17,"suggestions":"178"},{"ruleId":"170","severity":1,"message":"179","line":29,"column":6,"nodeType":"177","endLine":29,"endColumn":17,"suggestions":"180"},"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'setCategory' is assigned a value but never used.","'backData' is defined but never used.","react-hooks/exhaustive-deps","The 'sortFoodsData' array makes the dependencies of useEffect Hook (at line 153) change on every render. To fix this, wrap the initialization of 'sortFoodsData' in its own useMemo() Hook.","VariableDeclarator","'updatedItem' is assigned a value but never used.","'newFoodss' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'cloneActive'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook React.useEffect has a missing dependency: 'editName'. Either include it or remove the dependency array.",["182"],{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [cloneActive, foodsData]",{"range":"187","text":"188"},"Update the dependencies array to be: [editName, editorVal]",{"range":"189","text":"190"},[6705,6716],"[cloneActive, foodsData]",[765,776],"[editName, editorVal]"]