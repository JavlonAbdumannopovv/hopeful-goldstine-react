{"ast":null,"code":"var _jsxFileName = \"/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Products/Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { titles, foods, foodMenu, newFoods, Food1, newEditFoods } from \"../../../data/data\";\nimport plus from \"../../../assets/Plus.svg\";\nimport { Container, Category, Title, Foods, FoodsHeader, FoodsTitle, Sort, FoodsMain, NewDish, NewDishIcon, NewDishTitle, Food, FoodName, FoodPrice, FoodBowl, Wrapper, Edit, EditIcon, EditTitle, ButtonWrapper, Button, FoodMenu, MenuWrapper, MenuNameTitle, MenuNameInput, TypeWrapper, State, Type, MenuItem, MenuButtons, MenuButton, Completed } from \"./ProductsElements.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const iconStyle = {\n    width: \"20px\",\n    height: \"20px\",\n    margin: \"0 7px 0\",\n    textDecoration: \"none !important\"\n  };\n  const imgStyle = {\n    borderRadius: \"50%\",\n    margin: \"0 0 16px\"\n  };\n  const inputStyle = {\n    border: \"none\",\n    outline: \"none\",\n    background: \"transparent\",\n    padding: \"10px\",\n    width: \"100%\",\n    height: \"40px\",\n    fontStyle: \"normal\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"140%\"\n  };\n  const smallStyle = {\n    display: \"none\"\n  };\n  const menuStyle = {\n    display: \"none\"\n  };\n  const [newFoodss, setNewFoods] = useState(newFoods);\n  const [newEditFoodss, setNewEditFoods] = useState(newEditFoods);\n  const [activeType, setActiveType] = useState(\"Hot Dishes\");\n  const [foodsData, setFoodsData] = useState(foods.data);\n  const [titlesData, setTitlesData] = useState(titles);\n  const [imgInput, setImgInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [foodState, setFoodState] = useState(foodMenu.foodState);\n  const [foodType, setFoodType] = useState(foodMenu.foodType);\n  const [addShow, setAddShow] = useState(true);\n  const [menuActive, setMenuActive] = useState(menuStyle);\n  const [completed, setCompleted] = useState(smallStyle);\n  const [clickedId, setClickedId] = useState(\"\");\n  const [buttonActive, setButtonActive] = useState(false);\n  const clickTitleHandler = (name, key) => {\n    setTitlesData(prevItems => {\n      const updatedItems = [...prevItems];\n      const changedItems = updatedItems.map(item => {\n        if (item.name === name) {\n          return {\n            ...item,\n            active: true\n          };\n        } else {\n          return {\n            ...item,\n            active: false\n          };\n        }\n      });\n      return changedItems;\n    });\n    setActiveType(name);\n  };\n  const imgInputChanged = e => {\n    setCompleted({\n      display: \"none\"\n    });\n    setImgInput(e.target.value);\n  };\n  const nameInputChanged = e => {\n    setCompleted({\n      display: \"none\"\n    });\n    setNameInput(e.target.value);\n  };\n  const foodStateItemClick = id => {\n    setFoodState(prev => {\n      const data = prev.map(item => {\n        return {\n          ...item,\n          active: false\n        };\n      });\n      const updatedData = data.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            active: true\n          };\n        } else {\n          return item;\n        }\n      });\n      return updatedData;\n    });\n  };\n  const foodTypeItemClick = id => {\n    setFoodType(prev => {\n      const data = prev.map(item => {\n        return {\n          ...item,\n          active: false\n        };\n      });\n      const updatedData = data.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            active: true\n          };\n        } else {\n          return item;\n        }\n      });\n      return updatedData;\n    });\n  };\n  const clickNewDish = () => {\n    setAddShow(true);\n    setMenuActive({\n      display: \"block\"\n    });\n  };\n  const addNewFood = () => {\n    if (imgInput !== \"\" && nameInput !== \"\") {\n      setCompleted({\n        display: \"none\"\n      });\n      setNewFoods(prev => {\n        const stateActive = foodState.filter(item => item.active === true);\n        const typeActive = foodType.filter(item => item.active === true);\n        const uploadedData = [...prev, new Food1(imgInput, nameInput, `${stateActive[0].type} ${typeActive[0].type}`)];\n        return uploadedData;\n      });\n      setFoodsData(prev => {\n        const stateActive = foodState.filter(item => item.active === true);\n        const typeActive = foodType.filter(item => item.active === true);\n        const uploadedData = [new Food1(imgInput, nameInput, `${stateActive[0].type} ${typeActive[0].type}`), ...prev];\n        return uploadedData;\n      });\n      cancelNewFood();\n      setButtonActive(true);\n    } else if (imgInput === \"\" || nameInput === \"\") {\n      setCompleted({\n        display: \"block\"\n      });\n    }\n  };\n  const cancelNewFood = () => {\n    setMenuActive({\n      display: \"none\"\n    });\n    setNameInput(\"\");\n    setImgInput(\"\");\n  };\n  const editDishHandler = id => {\n    foodsData.forEach(food => {\n      if (food.id === id) {\n        setNameInput(food.name);\n        setImgInput(food.img);\n      }\n    });\n    setAddShow(false);\n    setMenuActive({\n      display: \"block\"\n    });\n    setClickedId(id);\n  };\n  const editClickedDish = id => {\n    if (imgInput !== \"\" && nameInput !== \"\") {\n      setCompleted({\n        display: \"none\"\n      });\n      const stateActive = foodState.filter(item => item.active === true);\n      const typeActive = foodType.filter(item => item.active === true);\n      const data = foodsData.map(food => {\n        if (food.id === id) {\n          return {\n            ...food\n          };\n        } else {\n          return null;\n        }\n      });\n      setNewEditFoods(prev => {\n        const data1 = [];\n        foodsData.forEach(food => {\n          if (food.id === id) {\n            data1.push(food);\n          }\n        });\n        return [...prev, ...data1];\n      });\n      setFoodsData(prev => {\n        const updatedData = prev.map(food => {\n          if (food.id === id) {\n            return new Food1(imgInput, nameInput, `${stateActive[0].type} ${typeActive[0].type}`);\n          } else {\n            return food;\n          }\n        });\n        return [...updatedData];\n      });\n      setButtonActive(true);\n      cancelNewFood();\n    } else if (imgInput === \"\" || nameInput === \"\") {\n      setCompleted({\n        display: \"block\"\n      });\n    }\n  };\n  const discardChanges = () => {\n    if (newEditFoodss[0] === undefined) {\n      setFoodsData(prev => {\n        const newFoodsData = newFoodss.map(item => {\n          const updatedData = foodsData.map((food, i) => {\n            if (food.name === item.name) {\n              foodsData.splice(i, 1);\n              return foodsData[i];\n            } else {\n              return foodsData;\n            }\n          });\n          return [...updatedData];\n        });\n        return newFoodsData[0][1];\n      });\n    } else if (newFoodss[0] === undefined) {\n      setFoodsData(prev => {\n        const filteredArr = newEditFoodss.filter(obj => {\n          const matchingObject = foodsData.find(newObj => newObj.bowl === obj.bowl);\n          return !matchingObject;\n        });\n        console.log(filteredArr);\n        return filteredArr;\n      });\n      // setFoodsData((prev) => {\n      //   const newFoodsData = newEditFoodss.map((item) => {\n      //     const updatedData = foodsData.map((food, i) => {\n      //       if (food.price !== item.price) {\n      //         console.log(\"noEqual\");\n      //         return foodsData;\n      //       } else {\n      //         console.log(\"equal\");\n      //         foodsData.splice(i, 1);\n      //         foodsData.splice(i, Food);\n      //         return foodsData[i];\n      //       }\n      //     });\n      //     return [...updatedData];\n      //   });\n      //   console.log(newFoodsData[0][1]);\n      //   return newFoodsData[0][1];\n      // });\n    }\n\n    saveChanges();\n  };\n  const saveChanges = () => {\n    // setFoodsData((prev) => {\n    //   if (newFoodss[0] !== undefined && newEditFoodss[0] === undefined) {\n    //     console.log(\"1\");\n    //     const newAddData = newFoodss.map((food) => {\n    //       return new Food1(food.img, food.name, food.type);\n    //     });\n    //     return [...newAddData, ...prev];\n    //   } else if (newFoodss[0] === undefined ) {\n    //     console.log(\"2\");\n    //     const newFoodsData = newEditFoodss.map((item) => {\n    //       const updatedData = prev.map((food) => {\n    //         if (food.id === item.id) {\n    //           return new Food1(item.img, item.name, item.type);\n    //         } else {\n    //           return food;\n    //         }\n    //       });\n    //       return [...updatedData];\n    //     });\n    //     return newFoodsData[0];\n    //   } else if (newFoodss[0] !== undefined && newEditFoodss[0] !== undefined) {\n    //     console.log(\"3\");\n    //     const newAddData = newFoodss.map((food) => {\n    //       return new Food1(food.img, food.name, food.type);\n    //     });\n    //     const newFoodsData = newEditFoodss.map((item) => {\n    //       const updatedData = prev.map((food) => {\n    //         if (food.id === item.id) {\n    //           return new Food1(item.img, item.name, item.type);\n    //         } else {\n    //           return food;\n    //         }\n    //       });\n    //       console.log(updatedData);\n    //       return [...updatedData];\n    //     });\n    //     return [...newFoodsData[0], ...newAddData, ...prev];\n    //   }\n    // });\n    // console.log(newFoodss);\n\n    // setFoodsData((prev) => {\n    //   const newAddData = newFoodss.map((food) => {\n    //     return new Food1(food.img, food.name, food.type);\n    //   });\n    //   return [...newAddData, ...prev];\n    // });\n    // setFoodsData((prev) => {\n    //   const newFoodsData = newEditFoodss.map((item) => {\n    //     const updatedData = prev.map((food) => {\n    //       if (food.id === item.id) {\n    //         return new Food1(item.img, item.name, item.type);\n    //       } else {\n    //         return food;\n    //       }\n    //     });\n    //     console.log(updatedData);\n    //     return [...updatedData];\n    //   });\n    //   return newFoodsData[0];\n    // });\n    setButtonActive(false);\n    setNewFoods([]);\n    setNewEditFoods([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FoodsHeader, {\n      children: [/*#__PURE__*/_jsxDEV(FoodsTitle, {\n        children: \"Products Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: iconStyle,\n          className: \"fa fa-sliders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), \" Manage Categories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Category, {\n      children: titlesData.map((title, ind) => {\n        return /*#__PURE__*/_jsxDEV(Title, {\n          onClick: () => clickTitleHandler(title.name, ind),\n          style: title.style(title.active),\n          children: title.name\n        }, title.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Foods, {\n      children: /*#__PURE__*/_jsxDEV(FoodsMain, {\n        children: [/*#__PURE__*/_jsxDEV(NewDish, {\n          onClick: clickNewDish,\n          children: [/*#__PURE__*/_jsxDEV(NewDishIcon, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: plus,\n              alt: \"plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewDishTitle, {\n            children: \"Add new dish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), foodsData.map(food => {\n          if (food.type.includes(activeType)) {\n            return /*#__PURE__*/_jsxDEV(Food, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: food.img,\n                alt: food.name,\n                width: \"132px\",\n                height: \"132px\",\n                style: imgStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FoodName, {\n                children: food.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n                children: [/*#__PURE__*/_jsxDEV(FoodPrice, {\n                  children: [\"$\", food.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this), \" -\", /*#__PURE__*/_jsxDEV(FoodBowl, {\n                  children: [food.bowl, \" Bowls\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Edit, {\n                onClick: () => editDishHandler(food.id),\n                children: [/*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditTitle, {\n                  children: \"Edit dish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)]\n            }, food.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), buttonActive ? /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: discardChanges,\n        children: \"Discard Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: saveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(FoodMenu, {\n      style: menuActive,\n      children: [/*#__PURE__*/_jsxDEV(Completed, {\n        style: completed,\n        children: \"Please, Full completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(MenuNameTitle, {\n          children: \"Img Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuNameInput, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: imgInput,\n            style: inputStyle,\n            type: \"text\",\n            placeholder: \"Food img url enter ...\",\n            onChange: imgInputChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(MenuNameTitle, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuNameInput, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: nameInput,\n            style: inputStyle,\n            type: \"text\",\n            placeholder: \"Food name enter ...\",\n            onChange: nameInputChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(State, {\n          children: [/*#__PURE__*/_jsxDEV(MenuNameTitle, {\n            children: \"Food State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), foodState.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => foodStateItemClick(item.id),\n            style: item.style(item.active),\n            children: item.type\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Type, {\n          children: [/*#__PURE__*/_jsxDEV(MenuNameTitle, {\n            children: \"Food Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), foodType.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => foodTypeItemClick(item.id),\n            style: item.style(item.active),\n            children: item.type\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuButtons, {\n        children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n          onClick: cancelNewFood,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), addShow ? /*#__PURE__*/_jsxDEV(MenuButton, {\n          onClick: () => addNewFood(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MenuButton, {\n          onClick: () => editClickedDish(clickedId),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n};\n_s(Products, \"YhE7Lsl62Mty+l7mbPspcUXtSFw=\");\n_c = Products;\nconst arr = [{\n  id: 1,\n  name: \"Javlon\"\n}];\nconst newArr = [{\n  id: 1,\n  name: \"Abdulloh\"\n}, {\n  id: 2,\n  name: \"Javohir\"\n}, {\n  id: 3,\n  name: \"JOhn\"\n}];\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","titles","foods","foodMenu","newFoods","Food1","newEditFoods","plus","Container","Category","Title","Foods","FoodsHeader","FoodsTitle","Sort","FoodsMain","NewDish","NewDishIcon","NewDishTitle","Food","FoodName","FoodPrice","FoodBowl","Wrapper","Edit","EditIcon","EditTitle","ButtonWrapper","Button","FoodMenu","MenuWrapper","MenuNameTitle","MenuNameInput","TypeWrapper","State","Type","MenuItem","MenuButtons","MenuButton","Completed","jsxDEV","_jsxDEV","Products","_s","iconStyle","width","height","margin","textDecoration","imgStyle","borderRadius","inputStyle","border","outline","background","padding","fontStyle","fontWeight","fontSize","lineHeight","smallStyle","display","menuStyle","newFoodss","setNewFoods","newEditFoodss","setNewEditFoods","activeType","setActiveType","foodsData","setFoodsData","data","titlesData","setTitlesData","imgInput","setImgInput","nameInput","setNameInput","foodState","setFoodState","foodType","setFoodType","addShow","setAddShow","menuActive","setMenuActive","completed","setCompleted","clickedId","setClickedId","buttonActive","setButtonActive","clickTitleHandler","name","key","prevItems","updatedItems","changedItems","map","item","active","imgInputChanged","e","target","value","nameInputChanged","foodStateItemClick","id","prev","updatedData","foodTypeItemClick","clickNewDish","addNewFood","stateActive","filter","typeActive","uploadedData","type","cancelNewFood","editDishHandler","forEach","food","img","editClickedDish","data1","push","discardChanges","undefined","newFoodsData","i","splice","filteredArr","obj","matchingObject","find","newObj","bowl","console","log","saveChanges","children","fileName","_jsxFileName","lineNumber","columnNumber","style","className","title","ind","onClick","src","alt","includes","price","placeholder","onChange","_c","arr","newArr","$RefreshReg$"],"sources":["/media/izzzrael/New Volume/Fronted Course/Lesson Project/React/food-pos-dark/src/components/Settings/Products/Products.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  titles,\n  foods,\n  foodMenu,\n  newFoods,\n  Food1,\n  newEditFoods,\n} from \"../../../data/data\";\nimport plus from \"../../../assets/Plus.svg\";\nimport {\n  Container,\n  Category,\n  Title,\n  Foods,\n  FoodsHeader,\n  FoodsTitle,\n  Sort,\n  FoodsMain,\n  NewDish,\n  NewDishIcon,\n  NewDishTitle,\n  Food,\n  FoodName,\n  FoodPrice,\n  FoodBowl,\n  Wrapper,\n  Edit,\n  EditIcon,\n  EditTitle,\n  ButtonWrapper,\n  Button,\n  FoodMenu,\n  MenuWrapper,\n  MenuNameTitle,\n  MenuNameInput,\n  TypeWrapper,\n  State,\n  Type,\n  MenuItem,\n  MenuButtons,\n  MenuButton,\n  Completed,\n} from \"./ProductsElements.js\";\n\nconst Products = () => {\n  const iconStyle = {\n    width: \"20px\",\n    height: \"20px\",\n    margin: \"0 7px 0\",\n    textDecoration: \"none !important\",\n  };\n  const imgStyle = {\n    borderRadius: \"50%\",\n    margin: \"0 0 16px\",\n  };\n  const inputStyle = {\n    border: \"none\",\n    outline: \"none\",\n    background: \"transparent\",\n    padding: \"10px\",\n    width: \"100%\",\n    height: \"40px\",\n    fontStyle: \"normal\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"140%\",\n  };\n  const smallStyle = {\n    display: \"none\",\n  };\n  const menuStyle = {\n    display: \"none\",\n  };\n\n  const [newFoodss, setNewFoods] = useState(newFoods);\n  const [newEditFoodss, setNewEditFoods] = useState(newEditFoods);\n  const [activeType, setActiveType] = useState(\"Hot Dishes\");\n  const [foodsData, setFoodsData] = useState(foods.data);\n  const [titlesData, setTitlesData] = useState(titles);\n  const [imgInput, setImgInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [foodState, setFoodState] = useState(foodMenu.foodState);\n  const [foodType, setFoodType] = useState(foodMenu.foodType);\n  const [addShow, setAddShow] = useState(true);\n  const [menuActive, setMenuActive] = useState(menuStyle);\n  const [completed, setCompleted] = useState(smallStyle);\n  const [clickedId, setClickedId] = useState(\"\");\n  const [buttonActive, setButtonActive] = useState(false);\n  const clickTitleHandler = (name, key) => {\n    setTitlesData((prevItems) => {\n      const updatedItems = [...prevItems];\n      const changedItems = updatedItems.map((item) => {\n        if (item.name === name) {\n          return {\n            ...item,\n            active: true,\n          };\n        } else {\n          return {\n            ...item,\n            active: false,\n          };\n        }\n      });\n      return changedItems;\n    });\n    setActiveType(name);\n  };\n\n  const imgInputChanged = (e) => {\n    setCompleted({ display: \"none\" });\n    setImgInput(e.target.value);\n  };\n\n  const nameInputChanged = (e) => {\n    setCompleted({ display: \"none\" });\n    setNameInput(e.target.value);\n  };\n\n  const foodStateItemClick = (id) => {\n    setFoodState((prev) => {\n      const data = prev.map((item) => {\n        return { ...item, active: false };\n      });\n      const updatedData = data.map((item) => {\n        if (item.id === id) {\n          return { ...item, active: true };\n        } else {\n          return item;\n        }\n      });\n      return updatedData;\n    });\n  };\n\n  const foodTypeItemClick = (id) => {\n    setFoodType((prev) => {\n      const data = prev.map((item) => {\n        return { ...item, active: false };\n      });\n      const updatedData = data.map((item) => {\n        if (item.id === id) {\n          return { ...item, active: true };\n        } else {\n          return item;\n        }\n      });\n      return updatedData;\n    });\n  };\n\n  const clickNewDish = () => {\n    setAddShow(true);\n    setMenuActive({ display: \"block\" });\n  };\n\n  const addNewFood = () => {\n    if (imgInput !== \"\" && nameInput !== \"\") {\n      setCompleted({ display: \"none\" });\n      setNewFoods((prev) => {\n        const stateActive = foodState.filter((item) => item.active === true);\n        const typeActive = foodType.filter((item) => item.active === true);\n        const uploadedData = [\n          ...prev,\n          new Food1(\n            imgInput,\n            nameInput,\n            `${stateActive[0].type} ${typeActive[0].type}`\n          ),\n        ];\n        return uploadedData;\n      });\n      setFoodsData((prev) => {\n        const stateActive = foodState.filter((item) => item.active === true);\n        const typeActive = foodType.filter((item) => item.active === true);\n        const uploadedData = [\n          new Food1(\n            imgInput,\n            nameInput,\n            `${stateActive[0].type} ${typeActive[0].type}`\n          ),\n          ...prev,\n        ];\n        return uploadedData;\n      });\n      cancelNewFood();\n      setButtonActive(true);\n    } else if (imgInput === \"\" || nameInput === \"\") {\n      setCompleted({ display: \"block\" });\n    }\n  };\n\n  const cancelNewFood = () => {\n    setMenuActive({ display: \"none\" });\n    setNameInput(\"\");\n    setImgInput(\"\");\n  };\n\n  const editDishHandler = (id) => {\n    foodsData.forEach((food) => {\n      if (food.id === id) {\n        setNameInput(food.name);\n        setImgInput(food.img);\n      }\n    });\n    setAddShow(false);\n    setMenuActive({ display: \"block\" });\n    setClickedId(id);\n  };\n\n  const editClickedDish = (id) => {\n    if (imgInput !== \"\" && nameInput !== \"\") {\n      setCompleted({ display: \"none\" });\n      const stateActive = foodState.filter((item) => item.active === true);\n      const typeActive = foodType.filter((item) => item.active === true);\n      const data = foodsData.map((food) => {\n        if (food.id === id) {\n          return { ...food };\n        } else {\n          return null;\n        }\n      });\n      setNewEditFoods((prev) => {\n        const data1 = [];\n        foodsData.forEach((food) => {\n          if (food.id === id) {\n            data1.push(food);\n          }\n        });\n        return [...prev, ...data1];\n      });\n      setFoodsData((prev) => {\n        const updatedData = prev.map((food) => {\n          if (food.id === id) {\n            return new Food1(\n              imgInput,\n              nameInput,\n              `${stateActive[0].type} ${typeActive[0].type}`\n            );\n          } else {\n            return food;\n          }\n        });\n        return [...updatedData];\n      });\n\n      setButtonActive(true);\n      cancelNewFood();\n    } else if (imgInput === \"\" || nameInput === \"\") {\n      setCompleted({ display: \"block\" });\n    }\n  };\n  const discardChanges = () => {\n    if (newEditFoodss[0] === undefined) {\n      setFoodsData((prev) => {\n        const newFoodsData = newFoodss.map((item) => {\n          const updatedData = foodsData.map((food, i) => {\n            if (food.name === item.name) {\n              foodsData.splice(i, 1);\n              return foodsData[i];\n            } else {\n              return foodsData;\n            }\n          });\n          return [...updatedData];\n        });\n        return newFoodsData[0][1];\n      });\n    } else if (newFoodss[0] === undefined) {\n      setFoodsData((prev) => {\n        const filteredArr = newEditFoodss.filter((obj) => {\n          const matchingObject = foodsData.find(\n            (newObj) => newObj.bowl === obj.bowl\n          );\n          return !matchingObject;\n        });\n        console.log(filteredArr);\n        return filteredArr;\n      });\n      // setFoodsData((prev) => {\n      //   const newFoodsData = newEditFoodss.map((item) => {\n      //     const updatedData = foodsData.map((food, i) => {\n      //       if (food.price !== item.price) {\n      //         console.log(\"noEqual\");\n      //         return foodsData;\n      //       } else {\n      //         console.log(\"equal\");\n      //         foodsData.splice(i, 1);\n      //         foodsData.splice(i, Food);\n      //         return foodsData[i];\n      //       }\n      //     });\n      //     return [...updatedData];\n      //   });\n      //   console.log(newFoodsData[0][1]);\n      //   return newFoodsData[0][1];\n      // });\n    }\n    saveChanges();\n  };\n\n  const saveChanges = () => {\n    // setFoodsData((prev) => {\n    //   if (newFoodss[0] !== undefined && newEditFoodss[0] === undefined) {\n    //     console.log(\"1\");\n    //     const newAddData = newFoodss.map((food) => {\n    //       return new Food1(food.img, food.name, food.type);\n    //     });\n    //     return [...newAddData, ...prev];\n    //   } else if (newFoodss[0] === undefined ) {\n    //     console.log(\"2\");\n    //     const newFoodsData = newEditFoodss.map((item) => {\n    //       const updatedData = prev.map((food) => {\n    //         if (food.id === item.id) {\n    //           return new Food1(item.img, item.name, item.type);\n    //         } else {\n    //           return food;\n    //         }\n    //       });\n    //       return [...updatedData];\n    //     });\n    //     return newFoodsData[0];\n    //   } else if (newFoodss[0] !== undefined && newEditFoodss[0] !== undefined) {\n    //     console.log(\"3\");\n    //     const newAddData = newFoodss.map((food) => {\n    //       return new Food1(food.img, food.name, food.type);\n    //     });\n    //     const newFoodsData = newEditFoodss.map((item) => {\n    //       const updatedData = prev.map((food) => {\n    //         if (food.id === item.id) {\n    //           return new Food1(item.img, item.name, item.type);\n    //         } else {\n    //           return food;\n    //         }\n    //       });\n    //       console.log(updatedData);\n    //       return [...updatedData];\n    //     });\n    //     return [...newFoodsData[0], ...newAddData, ...prev];\n    //   }\n    // });\n    // console.log(newFoodss);\n\n    // setFoodsData((prev) => {\n    //   const newAddData = newFoodss.map((food) => {\n    //     return new Food1(food.img, food.name, food.type);\n    //   });\n    //   return [...newAddData, ...prev];\n    // });\n    // setFoodsData((prev) => {\n    //   const newFoodsData = newEditFoodss.map((item) => {\n    //     const updatedData = prev.map((food) => {\n    //       if (food.id === item.id) {\n    //         return new Food1(item.img, item.name, item.type);\n    //       } else {\n    //         return food;\n    //       }\n    //     });\n    //     console.log(updatedData);\n    //     return [...updatedData];\n    //   });\n    //   return newFoodsData[0];\n    // });\n    setButtonActive(false);\n    setNewFoods([]);\n    setNewEditFoods([]);\n  };\n\n  return (\n    <Container>\n      <FoodsHeader>\n        <FoodsTitle>Products Management</FoodsTitle>\n        <Sort>\n          <i style={iconStyle} className=\"fa fa-sliders\"></i> Manage Categories\n        </Sort>\n      </FoodsHeader>\n      <Category>\n        {titlesData.map((title, ind) => {\n          return (\n            <Title\n              key={title.id}\n              onClick={() => clickTitleHandler(title.name, ind)}\n              style={title.style(title.active)}\n            >\n              {title.name}\n            </Title>\n          );\n        })}\n      </Category>\n      <Foods>\n        <FoodsMain>\n          <NewDish onClick={clickNewDish}>\n            <NewDishIcon>\n              <img src={plus} alt=\"plus\" />\n            </NewDishIcon>\n            <NewDishTitle>Add new dish</NewDishTitle>\n          </NewDish>\n          {foodsData.map((food) => {\n            if (food.type.includes(activeType)) {\n              return (\n                <Food key={food.id}>\n                  <img\n                    src={food.img}\n                    alt={food.name}\n                    width=\"132px\"\n                    height=\"132px\"\n                    style={imgStyle}\n                  />\n                  <FoodName>{food.name}</FoodName>\n                  <Wrapper>\n                    <FoodPrice>${food.price}</FoodPrice> -\n                    <FoodBowl>{food.bowl} Bowls</FoodBowl>\n                  </Wrapper>\n                  <Edit onClick={() => editDishHandler(food.id)}>\n                    <EditIcon></EditIcon>\n                    <EditTitle>Edit dish</EditTitle>\n                  </Edit>\n                </Food>\n              );\n            }\n            return null;\n          })}\n        </FoodsMain>\n      </Foods>\n      {buttonActive ? (\n        <ButtonWrapper>\n          <Button onClick={discardChanges}>Discard Changes</Button>\n          <Button onClick={saveChanges}>Save Changes</Button>\n        </ButtonWrapper>\n      ) : null}\n      <FoodMenu style={menuActive}>\n        <Completed style={completed}>Please, Full completed!</Completed>\n        <MenuWrapper>\n          <MenuNameTitle>Img Url</MenuNameTitle>\n          <MenuNameInput>\n            <input\n              value={imgInput}\n              style={inputStyle}\n              type=\"text\"\n              placeholder=\"Food img url enter ...\"\n              onChange={imgInputChanged}\n            />\n          </MenuNameInput>\n        </MenuWrapper>\n        <MenuWrapper>\n          <MenuNameTitle>Name</MenuNameTitle>\n          <MenuNameInput>\n            <input\n              value={nameInput}\n              style={inputStyle}\n              type=\"text\"\n              placeholder=\"Food name enter ...\"\n              onChange={nameInputChanged}\n            />\n          </MenuNameInput>\n        </MenuWrapper>\n        <TypeWrapper>\n          <State>\n            <MenuNameTitle>Food State</MenuNameTitle>\n            {foodState.map((item) => (\n              <MenuItem\n                onClick={() => foodStateItemClick(item.id)}\n                key={item.id}\n                style={item.style(item.active)}\n              >\n                {item.type}\n              </MenuItem>\n            ))}\n          </State>\n          <Type>\n            <MenuNameTitle>Food Type</MenuNameTitle>\n            {foodType.map((item) => (\n              <MenuItem\n                onClick={() => foodTypeItemClick(item.id)}\n                key={item.id}\n                style={item.style(item.active)}\n              >\n                {item.type}\n              </MenuItem>\n            ))}\n          </Type>\n        </TypeWrapper>\n        <MenuButtons>\n          <MenuButton onClick={cancelNewFood}>Cancel</MenuButton>\n          {addShow ? (\n            <MenuButton onClick={() => addNewFood()}>Add</MenuButton>\n          ) : (\n            <MenuButton onClick={() => editClickedDish(clickedId)}>\n              Edit\n            </MenuButton>\n          )}\n        </MenuButtons>\n      </FoodMenu>\n    </Container>\n  );\n};\n\nconst arr = [{ id: 1, name: \"Javlon\" }];\nconst newArr = [\n  { id: 1, name: \"Abdulloh\" },\n  { id: 2, name: \"Javohir\" },\n  { id: 3, name: \"JOhn\" },\n];\n\nexport default Products;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}